https://www.youtube.com/watch?v=_oR1p79t6gw&t=1962s


nest new pigs-backend
nest g resource users --no-spec
npm i @nestjs/typeorm typeorm pg
npm i @nestjs/config
npm i class-validator class-transformer
npm install --save @nestjs/swagger
nest g resource files --no-spec
nest g resource doors --no-spec
npm i -D @types/multer
npm install --save @nestjs/passport passport passport-local
npm install --save-dev @types/passport-local
nest g module auth
nest g service auth --no-spec
nest g controller auth --no-spec
npm install --save @nestjs/jwt passport-jwt
npm install --save-dev @types/passport-jwt


npm run start:dev
npm run build




// TODO
Сделать миграции для продакшена как в https://github.com/brocoders/nestjs-boilerplate/tree/main



// Postgres
\l - Список всех баз
\du - Список всех пользователей
\c test; - Подключиться к БД
\dt - Список таблиц
\d users; - Список полей таблицы
create database test;
create user test with encrypted password '123';
grant all privileges on database test to test;
SELECT * from users;



https://wanago.io/2023/01/16/api-nestjs-docker-compose/
docker images
docker rmi

docker rm
docker ps -a --format "table {{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Names}}"

npm run build
docker build --tag "nestjs-api" .
docker run nestjs-api
docker run -it nestjs-api
docker compose up
docker compose stop
docker compose down

docker volume ls
docker volume inspect VOLUME
docker volume rm VOLUME
docker volume prune


docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=123 -d postgres

// Yandex Cloud
sudo apt update
sudo apt upgrade

// nvm
curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
nvm list-remote
nvm install v18
nvm ls
nvm current
nvm use v18
nvm alias default 18

https://docs.docker.com/engine/install/ubuntu/


git clone https://github.com/maxl85/pigs-backend.git
cd pigs-backend
npm ci
npm run build
nano .env
nano docker.env
docker build --tag "nestjs-api" .
docker compose up -d
docker compose logs -f -n 20
docker compose logs -n 20
docker exec -it nestjs-api sh
docker compose stop


git pull
npm run build
docker build --tag "nestjs-api" .
docker compose up -d
docker compose logs -f


mkdir ~/backup
mkdir ~/backup/uploads
mkdir ~/backup/predicted
cp -r uploads ~/backup
cp -r predicted ~/backup
sudo cp -r postgres_data ~/backup



https://stackoverflow.com/questions/66605192/file-uploading-along-with-other-data-in-swagger-nestjs



find . -name "2023-08-12*.jpg" -type f
sudo find . -name "2023-08-12*.jpg" -type f -delete

scp -r user@158.160.2.88:/home/user/uploads  C:\\111

scp -r user@51.250.100.147:/home/user/predicted/found  C:\\111